% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tabulate_survey.R
\name{tabulate_survey}
\alias{tabulate_survey}
\alias{tabulate_binary_survey}
\title{Tabulate survey design objects by a categorical and another stratifying variable}
\usage{
tabulate_survey(x, var, strata = NULL, pretty = TRUE, wide = TRUE,
  digits = 1, method = "logit", na.rm = FALSE, deff = FALSE,
  proptotal = FALSE, rowtotals = FALSE, coltotals = FALSE)

tabulate_binary_survey(x, ..., strata = NULL, proptotal = FALSE,
  keep = NULL, invert = FALSE, pretty = TRUE, wide = TRUE,
  digits = 1, method = "logit", na.rm = FALSE, deff = FALSE,
  transpose = NULL)
}
\arguments{
\item{x}{a survey design object}

\item{var}{the bare name of a categorical variable}

\item{strata}{a variable to stratify the results by}

\item{pretty}{if \code{TRUE}, default, the proportion and CI are merged}

\item{wide}{if \code{TRUE} (default) and strata is defined, then the results are
presented in a wide table with each stratification counts and estimates in
separate columns. If \code{FALSE}, then the data will be presented in a long
format where the counts and estimates are presented in single columns. This
has no effect if strata is not defined.}

\item{digits}{if \code{pretty = FALSE}, this indicates the number of digits used
for proportion and CI}

\item{method}{a method from \code{\link[survey:svyciprop]{survey::svyciprop()}} to calculate the confidence
interval. Defaults to "logit"}

\item{na.rm}{When \code{TRUE}, missing (NA) values present in \code{var} will be removed
from the data set with a warning, causing a change in denominator for the
tabulations.  The default is set to \code{FALSE}, which creates an explicit
missing value called "(Missing)".}

\item{deff}{a logical indicating if the design effect should be reported.
Defaults to "TRUE"}

\item{proptotal}{if \code{TRUE} and \code{strata} is not \code{NULL}, then the totals of the
rows will be reported as proportions of the total data set, otherwise, they
will be proportions within the stratum (default).}

\item{rowtotals}{if \code{TRUE} and \code{strata} is defined, then an extra "Total"
column will be added tabulating all of the rows across strata.}

\item{coltotals}{if \code{TRUE} a new row with totals for each "n" column is
created.}

\item{...}{binary variables for tabulation}

\item{keep}{a vector of binary values to keep}

\item{invert}{if \code{TRUE}, the kept values are rejected. Defaults to \code{FALSE}}

\item{transpose}{if \code{wide = TRUE}, then this will transpose the columns to
the rows, which is useful when you stratify by age group. Default is
\code{NULL}, which will not transpose anything. You have three options for
transpose:
\itemize{
\item \code{transpose = "variable"}: uses the variable column, dropping values.
Use this if you know that your values are all identical or at least
identifiable by the variable name.
\item \code{transpose = "value"}   : uses the value column, dropping variables.
Use this if your values are important and the variable names are
generic placeholders.
\item \code{transpose = "both"}    : combines the variable and value columns.
Use this if both the variables and values are important.
If there is no stratification, the results will produce a single-row table
}}
}
\value{
a long or wide tibble with tabulations n, ci, and deff
}
\description{
Tabulate survey design objects by a categorical and another stratifying variable
}
\examples{
library(srvyr)
library(survey)
data(api)

# stratified sample
surv <- apistrat \%>\%
  as_survey_design(strata = stype, weights = pw)

s <- surv \%>\%
  tabulate_survey(awards, stype, coltotals = TRUE, rowtotals = TRUE, deff = TRUE)
s

# making things pretty
s \%>\%
  # wrap all "n" variables in braces (note space before n).
  augment_redundant(" n" = " (n)") \%>\%
  # relabel all columns containing "prop" to "\% (95\% CI)"
  rename_redundant("ci"   = "\% (95\% CI)",
                   "deff" = "Design Effect")

# long data
surv \%>\%
  tabulate_survey(awards, strata = stype, wide = FALSE)

# tabulate binary variables
surv \%>\%
  tabulate_binary_survey(yr.rnd, sch.wide, awards, keep = c("Yes"))

# stratify the binary variables
surv \%>\%
  tabulate_binary_survey(yr.rnd, sch.wide, awards, strata = stype, keep = c("Yes"))

# invert the tabulation
surv \%>\%
  tabulate_binary_survey(yr.rnd, sch.wide, awards, keep = c("Yes"), deff = TRUE, invert = TRUE)
}
\seealso{
\code{\link[=rename_redundant]{rename_redundant()}}, \code{\link[=augment_redundant]{augment_redundant()}}
}
